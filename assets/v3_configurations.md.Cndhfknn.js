import{_ as i,c as a,a3 as n,o as t}from"./chunks/framework.DjaJQDIS.js";const g=JSON.parse('{"title":"Configurations - v3","description":"Learn how to configure the package with different options like language, location, and translations","frontmatter":{"outline":"deep","title":"Configurations - v3","description":"Learn how to configure the package with different options like language, location, and translations"},"headers":[],"relativePath":"v3/configurations.md","filePath":"versions/v3/configurations.md","lastUpdated":1732284240000}'),e={name:"v3/configurations.md"};function h(l,s,p,o,k,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h1><p>We can update package configurations with <code>Configure</code> function that accepts a <code>Config</code> struct.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If you call <code>Configure</code> function multiple times it will not overwrite the previous configurations. It will merge them. So if you already configured the package buy down the road want to change only a specific configuration, you can do it without worrying about the rest.</p><p>If you want to override the previous configurations, use <code>Reconfigure</code> function instead.</p></div><h2 id="language" tabindex="-1">Language <a class="header-anchor" href="#language" aria-label="Permalink to &quot;Language&quot;">​</a></h2><p>Optionally you can set the language in your application.</p><blockquote><p>Default value is <code>&quot;en&quot;</code></p></blockquote><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/SerhiiCho/timeago/v3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    timeago.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Language: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ru&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Supported languages</p><p>You can find the full list of supported languages in the <a href="/v3/what-is-timeago.html#supported-languages">What is Timeago?</a> section.</p></div><div class="tip custom-block"><p class="custom-block-title">Configure in <code>init</code> or <code>main</code>?</p><p>You can put the configuration in the <code>init</code> function or in the <code>main</code> function. It&#39;s up to you to decide.</p></div><h2 id="location" tabindex="-1">Location <a class="header-anchor" href="#location" aria-label="Permalink to &quot;Location&quot;">​</a></h2><p>Location is the timezone location neeed for parsing string date like <code>2019-01-01 00:00:00</code> to <code>time.Time</code>. If Location is not set it will default to the server&#39;s location when parsing strings. If you date string is in the server&#39;s timezone <strong>you don&#39;t need to set this</strong>.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/SerhiiCho/timeago/v3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    timeago.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Location: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;America/New_York&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Example locations: <code>America/New_York</code>, <code>Asia/Tokyo</code>, <code>Australia/Sydney</code>.</p><h2 id="translation-overwrites" tabindex="-1">Translation overwrites <a class="header-anchor" href="#translation-overwrites" aria-label="Permalink to &quot;Translation overwrites&quot;">​</a></h2><p>There are cases when you want to replace certain words with specific ones. For example you might want to replace the word <code>days</code> with <code>d</code> to get <code>4 d ago</code>. Or, you might want to replace the word <code>ago</code>, <code>Just now</code>, <code>Online</code> with your own to match your application&#39;s needs.</p><p>With translation overwrites you can even change the order of the words in the final output or even extend it. For example, you can change <code>4 days ago</code> to <code>It&#39;s been 4 days</code>.</p><p>You can do it with any language supported by Timeago. Let&#39;s see the example where we wan&#39;t to get the output of <code>4d</code>, <code>4w</code> instead of <code>4 days ago</code>, <code>4 weeks ago</code> for English language.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/SerhiiCho/timeago/v3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    customTrans </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Lang: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;en&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Format: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{num}{timeUnit}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Day: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;one&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;d&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;other&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;d&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Week: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;one&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:   </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;other&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    timeago.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Configure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeago</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Translations: customTrans,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Here is the <code>LangSet</code> struct for reference to give you an idea of what fields you can overwrite:</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LangForms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LangSet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Lang    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`json:&quot;lang&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Format  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`json:&quot;format&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Ago     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`json:&quot;ago&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Online  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`json:&quot;online&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	JustNow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`json:&quot;justnow&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Second  </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`json:&quot;second&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Minute  </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`json:&quot;minute&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Hour    </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`json:&quot;hour&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Day     </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`json:&quot;day&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Week    </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`json:&quot;week&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Month   </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`json:&quot;month&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Year    </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LangForms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`json:&quot;year&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Keep in mind</p><p>The <code>Lang</code> field in the <code>LangSet</code> struct is the language you want to overwrite. If you want to overwrite the translation for multiple languages, you can add multiple <code>LangSet</code> structs to the <code>Translations</code> field in the <code>Config</code>.</p><p>If you provide a language code that is not defined, it will be ignored.</p></div>`,21)]))}const E=i(e,[["render",h]]);export{g as __pageData,E as default};
