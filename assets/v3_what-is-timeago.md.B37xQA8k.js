import{_ as a,c as e,a3 as i,o as r}from"./chunks/framework.DjaJQDIS.js";const g=JSON.parse('{"title":"What is Timeago - v3","description":"Learn about Timeago, a fast, lightweight date and time library that converts a given date into a \\"time ago\\" format","frontmatter":{"outline":"deep","title":"What is Timeago - v3","description":"Learn about Timeago, a fast, lightweight date and time library that converts a given date into a \\"time ago\\" format"},"headers":[],"relativePath":"v3/what-is-timeago.md","filePath":"versions/v3/what-is-timeago.md","lastUpdated":1732351241000}'),o={name:"v3/what-is-timeago.md"};function s(n,t,l,d,u,h){return r(),e("div",null,t[0]||(t[0]=[i('<h1 id="what-is-timeago" tabindex="-1">What is Timeago? <a class="header-anchor" href="#what-is-timeago" aria-label="Permalink to &quot;What is Timeago?&quot;">​</a></h1><p>Timeago is a fast and lightweight library for working with dates and times. It transforms a given date into a human-readable &quot;time ago&quot; format, calculating the difference between the specified date and the current date. It supports both past and future dates, making it versatile for various use cases.</p><p>With its simple API and support for multiple languages, Timeago seamlessly adapts to different applications, whether you&#39;re building user interfaces, handling localized content, or working with changing or real-time dates.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><p>The library has several nice features, such as:</p><ul><li>📅 Flexible date parsing, supporting both <a href="/v3/usage.html#date-in-the-past">past and future dates</a></li><li>⚙️ Configurable library with ability to pass <a href="/v3/options.html">options</a> to suit various use cases, <a href="/v3/configurations.html#translation-overrides">override translations</a> or <a href="/v3/configurations.html#modify-the-output-format">modify the output format</a></li><li>✅ Comprehensive test coverage for reliability</li><li>🌐 Timeago support multiple languages such as English, Russian, Ukrainian, Dutch, German and you can contribute more</li><li>📦 Compact codebase for minimal footprint</li><li>🕰️ Unix timestamp parsing</li><li>⏱️ Support for date-time strings in the <code>YYYY-MM-DD HH:MM:SS</code> format</li><li>📆 Compatibility with <code>time.Time</code> struct from the Go standard library</li><li>✍️ Easy <a href="/v3/contribute.html">contribution</a> of new language support</li><li>📝 Detailed <a href="https://github.com/SerhiiCho/timeago/blob/main/CHANGELOG.md" target="_blank" rel="noreferrer">CHANGELOG.md</a> for all updates and features</li><li>📖 Thorough documentation for ease of use</li></ul><h2 id="supported-languages" tabindex="-1">Supported Languages <a class="header-anchor" href="#supported-languages" aria-label="Permalink to &quot;Supported Languages&quot;">​</a></h2><p>Timeago supports multiple languages, and you’re welcome to <a href="/v3/contribute.html">contribute</a> additional ones. Check out the languages currently available:</p><table tabindex="0"><thead><tr><th>Flag</th><th>Language</th><th>Code (ISO 639-1)</th></tr></thead><tbody><tr><td>🇬🇧</td><td>English</td><td>en</td></tr><tr><td>🇷🇺</td><td>Russian</td><td>ru</td></tr><tr><td>🇺🇦</td><td>Ukrainian</td><td>uk</td></tr><tr><td>🇳🇱</td><td>Dutch</td><td>nl</td></tr><tr><td>🇩🇪</td><td>German</td><td>de</td></tr></tbody></table>',9)]))}const p=a(o,[["render",s]]);export{g as __pageData,p as default};
